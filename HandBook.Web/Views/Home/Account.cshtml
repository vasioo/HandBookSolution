@model UserAccountDTO
@using Microsoft.AspNetCore.Authorization

@inject IAuthorizationService AuthorizationService
@section Styles {
    <link href="@Url.Content("~/css/custom/CustomPostIndex.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/custom/CustomUserAccount.css")" rel="stylesheet" type="text/css" />
}
@section Scripts{
    <script src="@Url.Content("~/js/custom/postJs.js")" type="text/javascript" asp-append-version="true"></script>
    <script src="@Url.Content("~/js/custom/accountPage.js")" type="text/javascript" asp-append-version="true"></script>
}

<style>
    #overlay-panel-for-follows {
        display: block;
        z-index: 1000;
        height: 80vh;
        overflow: auto;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(5px);
        display: none;
        position: fixed;
    }

    .overlay-content {
        background-color: white;
        width: 400px;
        height: 500px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);
        overflow-y: auto;
        padding: 10px;
    }

    .user-username-link {
        text-decoration: none;
        color: darkgray;
    }

        .user-username-link:hover {
            text-decoration: none;
            color: black;
        }

        .user-username-link:active {
            text-decoration: none;
        }
</style>
@if (Model != null && Model.UserTempUsername != null)
{
    <div class="row justify-content-center">
        <div class="row justify-content-center">

            <div class="col-7 pt-4 pb-3">
                <div class="row justify-content-around align-items-center">
                    <div class="col-md-1">
                        @{
                            string link = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/profile-image-for-{Model.UserTempUsername!}.png";
                            string alternativeLink = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1700160046/azgysbpf8xpcxpfclb9i.jpg";
                            @if (User!.Identity!.Name == Model.UserTempUsername)
                            {
                                <div class="upload-container">
                                    <img src="@link" alt="Image not found" onerror="this.onerror=null;this.src='@alternativeLink';" onclick="showProfileImage()" class="rounded-circle uploaded-image" />
                                    <div class="upload-input" style="cursor:pointer;">
                                        <div class="overlay">
                                            <div class="plus-icon" style="cursor:pointer;">
                                                <input type="file" id="profile-image" name="profile-image" class="image-upload" accept=".png, .jpg, .jpeg" multiple="multiple" max="1">
                                                <i class="fa-solid fa-camera"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="custom-view-profile-image-container-id" class="d-flex justify-content-center align-items-center">
                                    <img src="@link" alt="Image not found" onerror="this.onerror=null;this.src='@alternativeLink';" id="custom-view-profile-image-id" />
                                </div>
                            }
                            else
                            {
                                <img src="@link" alt="Image not found" onerror="this.onerror=null;this.src='@alternativeLink';" class="rounded-circle uploaded-image" style="width:100px; margin-right: 10px;" />
                            }
                        }
                    </div>
                    <div class="col-md-6">
                        <div class="row" id="following-information">
                            <div class="col pr-1">
                                <div class="d-flex justify-content-center">
                                    <span>@Model.PostsTemp.Count()</span>
                                </div>
                                <div class="d-flex justify-content-center">
                                    <span>Posts</span>
                                </div>
                            </div>
                            <div class="col pr-1">
                                <div class="d-flex justify-content-center">
                                    <a class="btn" id="followers-load-btn" data-offset-count="0">@Model.Followers</a>
                                </div>
                                <div class="d-flex justify-content-center">
                                    <span class="text">Followers</span>
                                </div>
                            </div>
                            <div class="col pr-1">
                                <div class="d-flex justify-content-center">
                                    <a class="btn" id="follows-load-btn" data-offset-count="0">@Model.Follows</a>
                                </div>
                                <div class="d-flex justify-content-center">
                                    <span class="text">Following</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-7 p-0 m-0">
                <div class="d-flex justify-content-around py-3">
                    @if (User!.Identity!.Name == Model.UserTempUsername)
                    {
                        <a asp-area="Identity" asp-page="/Account/Manage/Index" class="btn btn-secondary col-10" data-username="@Model.UserTempUsername">
                            Edit Settings
                        </a>
                    }
                    else
                    {
                        @if (Model.FollowsThePerson == false)
                        {
                            <a href="#" class="btn btn-primary add-following col-5" data-username="@Model.UserTempUsername">
                                Follow
                            </a>
                        }
                        else
                        {
                            <a href="#" class="btn btn-secondary remove-following col-5" data-username="@Model.UserTempUsername">
                                Followed
                            </a>
                        }
                        <a href="@Url.Action("Chat", "Messages", new { userName = Model.UserTempUsername})" class="btn border border-3 col-5" style="text-decoration:none">
                            Message
                        </a>
                    }
                </div>
            </div>
        </div>

        <div class="pt-4">
            <div class="post-container row" data-user-username="@Model.UserTempUsername">
                <div class="liked-comments-from-temp" data-comments-list="@TempData["UserLikedComments"]"></div>
                @if (Model != null)
                {
                    TempData.Keep();
                    @foreach (var item in Model.PostsTemp)
                    {
                        @await Html.PartialAsync("_PostsPartial", item)
                    }
                }
            </div>
        </div>
    </div>

}
else
{
    <div class="row justify-content-center py-5">
        <h1>The user is not found!</h1>
    </div>
}