@using HandBook.Models;
@model CardDTO

@{
    var item = Model;
    string GetTimeDisplay(DateTime postDate)
    {
        TimeSpan timeDifference = DateTime.Now - postDate;

        double seconds = Math.Floor(timeDifference.TotalSeconds);
        double minutes = Math.Floor(timeDifference.TotalMinutes);
        double hours = Math.Floor(timeDifference.TotalHours);
        double days = Math.Floor(timeDifference.TotalDays);

        string displayString = "";

        if (days > 365 || (days > 7 && postDate.Year != DateTime.Now.Year))
        {
            displayString = postDate.ToString("yyyy-MM-dd HH:mm:ss");
        }
        else if (days > 7)
        {
            displayString = postDate.ToString("MMMM d");
        }
        else if (days >= 1)
        {
            displayString = days == 1 ? "1 day ago" : $"{(int)days} days ago";
        }
        else if (hours >= 1)
        {
            displayString = hours == 1 ? "1 hour ago" : $"{(int)hours} hours ago";
        }
        else if (minutes >= 1)
        {
            displayString = minutes == 1 ? "1 minute ago" : $"{(int)minutes} minutes ago";
        }
        else
        {
            displayString = seconds == 1 ? "1 second ago" : $"{(int)seconds} seconds ago";
        }

        return displayString;
    }

    List<string> userLikedCards;

    if (TempData.ContainsKey("UserLikedCards"))
    {
        var tempDataValue = TempData["UserLikedCards"];

        if (tempDataValue is string[] tempDataArray)
        {
            userLikedCards = tempDataArray.ToList();
        }
        else if (tempDataValue is List<string> tempList)
        {
            userLikedCards = tempList;
        }
        else
        {
            throw new InvalidOperationException("Invalid type found in TempData for key 'UserLikedCards'");
        }
    }
    else
    {
        userLikedCards = new List<string>();
    }


    TempData.Keep();
}
<div class="row justify-content-center">
    <div class="card col-lg-7 col-md-8 col-sm-10 col-12 mt-3" data-post-id="@item.Id" style="width: 100%; max-width: 600px;">
        <div class="card-header border-bottom mb-2">
            <div class="row justify-content-between w-100">
                <div class="profile-column-post d-flex align-items-center">
                    @{
                        var link = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/profile-image-for-{item.CreatorUserName}?timestamp={DateTime.Now}";
                    }
                    <a class="" asp-controller="Home" asp-action="Account" asp-route-username="@item.CreatorUserName">
                        <img src="@link" class="profile-image-class" alt="Image not found" style="border-radius:30px; width:60px;height:60px; margin-right:10px;" />
                    </a>
                    <div>
                        <a class="card-title h5 cr-us-name custom-username-com-link" asp-controller="Home" asp-action="Account" asp-route-username="@item.CreatorUserName">
                            &#64;@item.CreatorUserName
                        </a>
                        <div class="custom-date">@GetTimeDisplay(item.Time)</div>
                    </div>
                </div>
            </div>
        </div>

        @{
            <div class="d-flex align-items-center justify-content-center" style="height: 100%;">
                <img src="@item.image" style="border-radius: 6px; max-height: 100%; max-width: 100%;" alt="Image" class="fit-image">
            </div>
            var commentsCount = item.AmountOfComments;
        }
        <div class="card-body p-0 m-0">
            <div class="row justify-content-center p-0 m-0">
                <div class="col-10 pt-3">
                    <div class="d-flex justify-content-between">
                        <div>
                            <span class="likeCount" data-item-id="@item.Id" style="display: @(item.AmountOfLikes > 0 ? "block" : "none");">
                                @item.AmountOfLikes <i class="fa-solid fa-heart liked fa-sm" style="color: #ff0000;"></i>
                            </span>
                        </div>
                        <div>
                            @if (commentsCount == 1)
                            {
                                <span class="commentsCount" data-item-id="@item.Id">@commentsCount comment</span>
                            }
                            else
                            {
                                <span class="commentsCount" data-item-id="@item.Id">@commentsCount comments</span>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-center">
                <hr class="col-11">
            </div>

            <div class="row">
                <div class="col-12 d-flex justify-content-around">
                    <div class="col-1 pt-2 text-center pb-3">
                        <button class="likeButton" data-count="@item.AmountOfLikes" id="@item.Id">
                            @if (userLikedCards != null)
                            {
                                @if (userLikedCards.Contains(item.Id.ToString().ToLower()))
                                {
                                    <i class="fa-solid fa-heart liked fa-xl" style="color: #ff0000;"></i>
                                }
                                else
                                {

                                    <i class="fa-regular fa-heart fa-xl" style="color: #000;"></i>
                                }
                            }
                            else
                            {

                                <i class="fa-regular fa-heart fa-xl" style="color: #000;"></i>
                            }
                        </button>
                        <br>
                    </div>
                    <div class="col-1 pt-2 text-center pb-3">
                        <button class="commentButton" id="@item.Id">
                            <i class="fa-regular fa-comment fa-xl"></i>
                        </button>
                        <br>
                    </div>
                </div>
            </div>
            <div class="row">
                @Model.Description
            </div>
            <div class="row comment-section" style="display:none" data-post-id="@item.Id">
                <div class="col">
                    <div class="col" style="background:lightgray;border-radius: 15px;">
                        <div class="input-group justify-content-between">
                            <div class="col-11 pl-1 pr-1 m-0">
                                <textarea class="comment-text w-100" placeholder="Write a comment..."></textarea>
                            </div>
                            <div class="input-group-append align-self-end ">
                                <button class="btn submit-btn" type="button" disabled>
                                    <i class="fa-solid fa-paper-plane" style="rotate:30deg"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                @{
                    var commentContainerId = $"comment-container-{Model.Id}";
                }
                <div class="comment-section-regulation-div" id="@commentContainerId">
                    @if (TempData["UserLikedComments"] == "")
                    {
                        TempData["UserLikedComments"] = new List<int>();
                    }

                </div>
                <div class="">
                    <a class="load-more-comments btn">Load More Comments</a>
                </div>
            </div>
        </div>
    </div>
</div>