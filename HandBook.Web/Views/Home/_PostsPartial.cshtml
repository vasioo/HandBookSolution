@using HandBook.Models;
@model Post

@{
    var item = Model;
    if (item != null)
    {
        List<int> userLikedCards = ViewBag.UserLikedCards;
        if (userLikedCards == null)
        {
            userLikedCards = new List<int>();
        }

        DateTime postDate = item.Time;
        TimeSpan timeDifference = DateTime.Now - postDate;

        double seconds = Math.Floor(timeDifference.TotalSeconds);
        double minutes = Math.Floor(timeDifference.TotalMinutes);
        double hours = Math.Floor(timeDifference.TotalHours);
        double days = Math.Floor(timeDifference.TotalDays);


        string displayString = "";

        if (days > 365 || (days > 7 && postDate.Year != DateTime.Now.Year))
        {
            displayString = postDate.ToString("yyyy-MM-dd HH:mm:ss");
        }
        else if (days > 7)
        {
            displayString = postDate.ToString("MMMM d");
        }
        else if (days >= 1)
        {
            displayString = days == 1 ? "1 day ago" : $"{(int)days} days ago";
        }
        else if (hours >= 1)
        {
            displayString = hours == 1 ? "1 hour ago" : $"{(int)hours} hours ago";
        }
        else if (minutes >= 1)
        {
            displayString = minutes == 1 ? "1 minute ago" : $"{(int)minutes} minutes ago";
        }
        else
        {
            displayString = seconds == 1 ? "1 second ago" : $"{(int)seconds} seconds ago";
        }
        <div class="card" style="width: 470px">
            <div class="card-header">
                <div class="row justify-content-between w-100">
                    <div class="col-auto">
                        <a class="card-title h5 cr-us-name" asp-controller="Home" asp-action="Account" asp-route-username="@item.CreatorUserName">
                            &#64;@item.CreatorUserName
                        </a>
                    </div>
                    <div class="col-auto p-0">
                        <div class="custom-date">@displayString</div>
                    </div>
                </div>
            </div>

            @{
                var base64Image = Convert.ToBase64String(item.image);
                ViewBag.ImageData = base64Image;

                <img src="data:image;base64,@ViewBag.ImageData" style="border-radius:6px" alt="Image" class="fit-image">
                var commentsCount = 0;
                if (item.Comments != null)
                {
                    commentsCount = item.Comments.Count();
                }
            }
            <div class="card-body p-0 m-0">
                <div class="row justify-content-center p-0 m-0">
                    <div class="col-10 pt-3">
                        <div class="d-flex justify-content-between">
                            <div>
                                <span class="likeCount" data-item-id="@item.Id">@item.AmountOfLikes likes</span>
                            </div>
                            <div>
                                <span class="likeCount" data-item-id="@item.Id">@commentsCount comments</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-center">
                    <hr class="col-11">
                </div>

                <div class="row">
                    <div class="col-12 d-flex justify-content-around">
                        <div class="col-1 pt-2 text-center pb-3">
                            <button class="likeButton" onclick="like(this,@item.Id)" data-count="@item.AmountOfLikes">
                                @if (userLikedCards.Contains(item.Id))
                                {
                                    <i class="fa-solid fa-heart liked fa-xl" style="color: #ff0000;"></i>
                                }
                                else
                                {

                                    <i class="fa-regular fa-heart fa-xl" style="color: #000;"></i>
                                }
                            </button>
                            <br>
                        </div>
                        <div class="col-1 pt-2 text-center pb-3">
                            <button class="commentButton" onclick="toggleComments(@item.Id)">
                                <i class="fa-regular fa-comment fa-xl"></i>
                            </button>
                            <br>
                        </div>
                        <div class="col-1 pt-2 text-center pb-3">
                            <button class="shareButton" onclick="share(this,@item.Id)">
                                <i class="fa-solid fa-share-from-square fa-xl"></i>
                            </button>
                            <br>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
    }
}